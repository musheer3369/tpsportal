<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>standard</category>
        <client_script><![CDATA[function($scope, $rootScope, $location, spUtil, $timeout, spAriaFocusManager) {
	var canNavigate = true;
	if ($scope.data.dataTableWidget)
		angular.extend($scope.data.dataTableWidget.options, $scope.options);

	$scope.$on('data_table.click', callDataClick);

	$scope.$on('select2.ready', function(e, $el){
		if ($scope.data.invalid_table){
			e.stopPropagation();
			$el.select2('open');
		}
	})

	$scope.selectedTable = {
		displayValue: $scope.data.table,
		value: $scope.data.table
	}

	function resetParams(){
		delete $scope.data.p;
		delete $scope.data.o;
		delete $scope.data.d;
		delete $scope.data.q;
		delete $scope.data.table;
	}

	$scope.onChange = function() {
		resetParams();
		$scope.data.table = $scope.selectedTable.value;
		$scope.data.fields = "";  // reset
		$scope.data.invalid_table = false;
		getData(true);
	}
	
	function callDataClick(e, parms) {											
			var oid = $location.search().id;
			var p = $scope.data.page_id || 'form';
			var s = {id: p, table: parms.table, sys_id: parms.sys_id, view: $scope.data.view};
			if (oid == p) {
				s.spa = 1;
				var t = $location.search();
				s = angular.extend(t, s);
				$rootScope.$broadcast('$sp.list.click', s);
			}

			var newURL = $location.search(s);
			spAriaFocusManager.navigateToLink(newURL.url());										
	}

	function getData(updateUrl) {
		var f = $scope.data;
		spUtil.update($scope).then(function(data) {
				$scope.data.dataTableWidget = null;
				$timeout(function(){
					$scope.data.dataTableWidget = data.dataTableWidget;
					angular.extend($scope.data.dataTableWidget.options, $scope.options);
					if (updateUrl)
						setPermalink(f.table);
				});
		});
	}

	function setPermalink(table) {
		$scope.ignoreLocationChange = true;
		var searchParms = $location.search();
		var search = {
			spa: 1,
			table: table,
			id: searchParms.id
		};
		$location.search(search);
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.widget-data-table .clearfix {
  display: none;
}

.panel-primary .panel-heading {
  button:not(.btn-default) {
    &amp;:focus {
      outline-color: #FFFFFF;
      border-color: #FFFFFF;
      box-shadow: 0px 0px 5px #FFFFFF;
    }
  }
}
</css>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,glyph,color,sp_page</field_list>
        <has_preview>false</has_preview>
        <id>rsa-data-table-from-url</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>RSA Data Table from URL Definition</name>
        <option_schema>[{"hint":"Show Instance option title instead of the table's plural label","name":"use_instance_title","default_value":"false","section":"Presentation","label":"Use Instance Title","type":"boolean"},{"hint":"If enabled, show the filter in the breadcrumb section of the table","name":"enable_filter","default_value":"false","section":"Presentation","label":"Enable Filter","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles>snc_external,snc_internal</roles>
        <script><![CDATA[(function() {
	deleteOptions(['table','field_list','filter','order_by', 'order_direction','order','maximum_entries']);
	if (input) {
		data.table = input.table;
		data.view = input.view;
	} else {
		data.table = $sp.getParameter('table') || $sp.getParameter('t');
		data.view = $sp.getParameter('view');
	}

	if (!data.table) {
		data.invalid_table = true;
		data.table_label = "";
		return;
	}

	var gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}

	// page is where the record URLs go, URL parameter wins
	data.page_id = $sp.getParameter("target_page_id");
	if (!data.page_id) {
		var sp_page = $sp.getValue('sp_page');
		if (sp_page) {
			var pageGR = new GlideRecord('sp_page');
			pageGR.get(sp_page);
			data.page_id = pageGR.id.getDisplayValue();
		}
	}

	// widget parameters
	data.table_label = gr.getLabel();
	data.fields = $sp.getListColumns(data.table, data.view);
	copyParameters(data, ['p', 'o', 'd', 'filter']);
	copyParameters(data, ['relationship_id', 'apply_to', 'apply_to_sys_id']);
	data.filterACLs = true;
	data.show_new = true;
	data.show_keywords  = true;
	data.show_breadcrumbs = false;
	data.fromUrl = true;
	data.useInstanceTitle = (options.use_instance_title == "true");
	data.headerTitle = data.useInstanceTitle ? options.title : gr.getPlural();
	data.enable_filter = input.enable_filter || options.enable_filter == true || options.enable_filter == "true";
	data.dataTableWidget = $sp.getWidget('widget-data-table', data);
	

	function copyParameters(to, names) {
		names.forEach(function(name) {
			data[name] = $sp.getParameter(name);
		})
	}

	// in case this widget is tied to the wrong instance type
	function deleteOptions(names) {
		names.forEach(function(name) {
			delete options[name];
		})
	}
})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>Mohammad.Ahmed@mindshift.com</sys_created_by>
        <sys_created_on>2022-01-12 00:58:34</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>70ea7cbcdb090dd491a5560868961902</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>RSA Data Table from URL Definition</sys_name>
        <sys_package display_value="Ricoh Service Advantage Portal" source="x_mst_tsp">e34745bedb04cd50c05f2706ca96190c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Ricoh Service Advantage Portal">e34745bedb04cd50c05f2706ca96190c</sys_scope>
        <sys_update_name>sp_widget_70ea7cbcdb090dd491a5560868961902</sys_update_name>
        <sys_updated_by>Mohammad.Ahmed@mindshift.com</sys_updated_by>
        <sys_updated_on>2022-01-12 01:22:09</sys_updated_on>
        <template><![CDATA[<div>
  <div ng-if="data.invalid_table">
    <div class="alert alert-info">
      <span ng-if="data.table_label">${Table not defined} '{{data.table_label}}'</span>
      <span ng-if="!data.table_label">${Select table on field below or specify on URL} ?id=list&amp;table=table_name</span>
    </div>
    <sn-record-picker field="selectedTable" table="'sys_db_object'"
                      display-field="'label'"
                      value-field="'name'"
                      display-fields="'name'"
                      search-fields="'label,name'" page-size="100" on-change="onChange()" ></sn-record-picker>
  </div>
  <div ng-if="data.dataTableWidget && !data.invalid_table">
  	<sp-widget widget="data.dataTableWidget"></sp-widget>
  </div>
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Ricoh Service Advantage Portal">e34745bedb04cd50c05f2706ca96190c</application>
        <file_path/>
        <instance_id>d22192526f90e244869e7b2f5d3ee476</instance_id>
        <instance_name>ricohusadev</instance_name>
        <name>sp_widget_70ea7cbcdb090dd491a5560868961902</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;standard&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $rootScope, $location, spUtil, $timeout, spAriaFocusManager) {
	var canNavigate = true;
	if ($scope.data.dataTableWidget)
		angular.extend($scope.data.dataTableWidget.options, $scope.options);

	$scope.$on('data_table.click', callDataClick);

	$scope.$on('select2.ready', function(e, $el){
		if ($scope.data.invalid_table){
			e.stopPropagation();
			$el.select2('open');
		}
	})

	$scope.selectedTable = {
		displayValue: $scope.data.table,
		value: $scope.data.table
	}

	function resetParams(){
		delete $scope.data.p;
		delete $scope.data.o;
		delete $scope.data.d;
		delete $scope.data.q;
		delete $scope.data.table;
	}

	$scope.onChange = function() {
		resetParams();
		$scope.data.table = $scope.selectedTable.value;
		$scope.data.fields = "";  // reset
		$scope.data.invalid_table = false;
		getData(true);
	}
	
	function callDataClick(e, parms) {											
			var oid = $location.search().id;
			var p = $scope.data.page_id || 'form';
			var s = {id: p, table: parms.table, sys_id: parms.sys_id, view: $scope.data.view};
			if (oid == p) {
				s.spa = 1;
				var t = $location.search();
				s = angular.extend(t, s);
				$rootScope.$broadcast('$sp.list.click', s);
			}

			var newURL = $location.search(s);
			spAriaFocusManager.navigateToLink(newURL.url());										
	}

	function getData(updateUrl) {
		var f = $scope.data;
		spUtil.update($scope).then(function(data) {
				$scope.data.dataTableWidget = null;
				$timeout(function(){
					$scope.data.dataTableWidget = data.dataTableWidget;
					angular.extend($scope.data.dataTableWidget.options, $scope.options);
					if (updateUrl)
						setPermalink(f.table);
				});
		});
	}

	function setPermalink(table) {
		$scope.ignoreLocationChange = true;
		var searchParms = $location.search();
		var search = {
			spa: 1,
			table: table,
			id: searchParms.id
		};
		$location.search(search);
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.widget-data-table .clearfix {
  display: none;
}

.panel-primary .panel-heading {
  button:not(.btn-default) {
    &amp;amp;:focus {
      outline-color: #FFFFFF;
      border-color: #FFFFFF;
      box-shadow: 0px 0px 5px #FFFFFF;
    }
  }
}
&lt;/css&gt;&lt;data_table&gt;sp_instance_table&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;title,glyph,color,sp_page&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;rsa-data-table-from-url&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;RSA Data Table from URL Definition&lt;/name&gt;&lt;option_schema&gt;[{"hint":"Show Instance option title instead of the table's plural label","name":"use_instance_title","default_value":"false","section":"Presentation","label":"Use Instance Title","type":"boolean"},{"hint":"If enabled, show the filter in the breadcrumb section of the table","name":"enable_filter","default_value":"false","section":"Presentation","label":"Enable Filter","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
	deleteOptions(['table','field_list','filter','order_by', 'order_direction','order','maximum_entries']);
	if (input) {
		data.table = input.table;
		data.view = input.view;
	} else {
		data.table = $sp.getParameter('table') || $sp.getParameter('t');
		data.view = $sp.getParameter('view');
	}

	if (!data.table) {
		data.invalid_table = true;
		data.table_label = "";
		return;
	}

	var gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}

	// page is where the record URLs go, URL parameter wins
	data.page_id = $sp.getParameter("target_page_id");
	if (!data.page_id) {
		var sp_page = $sp.getValue('sp_page');
		if (sp_page) {
			var pageGR = new GlideRecord('sp_page');
			pageGR.get(sp_page);
			data.page_id = pageGR.id.getDisplayValue();
		}
	}

	// widget parameters
	data.table_label = gr.getLabel();
	data.fields = $sp.getListColumns(data.table, data.view);
	copyParameters(data, ['p', 'o', 'd', 'filter']);
	copyParameters(data, ['relationship_id', 'apply_to', 'apply_to_sys_id']);
	data.filterACLs = true;
	data.show_new = true;
	data.show_keywords  = true;
	data.show_breadcrumbs = false;
	data.fromUrl = true;
	data.useInstanceTitle = (options.use_instance_title == "true");
	data.headerTitle = data.useInstanceTitle ? options.title : gr.getPlural();
	data.enable_filter = input.enable_filter || options.enable_filter == true || options.enable_filter == "true";
	data.dataTableWidget = $sp.getWidget('widget-data-table', data);
	

	function copyParameters(to, names) {
		names.forEach(function(name) {
			data[name] = $sp.getParameter(name);
		})
	}

	// in case this widget is tied to the wrong instance type
	function deleteOptions(names) {
		names.forEach(function(name) {
			delete options[name];
		})
	}
})()]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Mohammad.Ahmed@mindshift.com&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-01-12 00:58:34&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;70ea7cbcdb090dd491a5560868961902&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;RSA Data Table from URL Definition&lt;/sys_name&gt;&lt;sys_package display_value="Ricoh Service Advantage Portal" source="x_mst_tsp"&gt;e34745bedb04cd50c05f2706ca96190c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Ricoh Service Advantage Portal"&gt;e34745bedb04cd50c05f2706ca96190c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_70ea7cbcdb090dd491a5560868961902&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Mohammad.Ahmed@mindshift.com&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-01-12 01:22:09&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
  &lt;div ng-if="data.invalid_table"&gt;
    &lt;div class="alert alert-info"&gt;
      &lt;span ng-if="data.table_label"&gt;${Table not defined} '{{data.table_label}}'&lt;/span&gt;
      &lt;span ng-if="!data.table_label"&gt;${Select table on field below or specify on URL} ?id=list&amp;amp;table=table_name&lt;/span&gt;
    &lt;/div&gt;
    &lt;sn-record-picker field="selectedTable" table="'sys_db_object'"
                      display-field="'label'"
                      value-field="'name'"
                      display-fields="'name'"
                      search-fields="'label,name'" page-size="100" on-change="onChange()" &gt;&lt;/sn-record-picker&gt;
  &lt;/div&gt;
  &lt;div ng-if="data.dataTableWidget &amp;&amp; !data.invalid_table"&gt;
  	&lt;sp-widget widget="data.dataTableWidget"&gt;&lt;/sp-widget&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>891909923</payload_hash>
        <record_name>RSA Data Table from URL Definition</record_name>
        <reverted_from/>
        <source>5666c93fdb9c0510c05f2706ca961984</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>Mohammad.Ahmed@mindshift.com</sys_created_by>
        <sys_created_on>2022-01-12 01:22:09</sys_created_on>
        <sys_id>86404d7cdb490dd491a5560868961976</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17e4be0c7660000001</sys_recorded_at>
        <sys_updated_by>Mohammad.Ahmed@mindshift.com</sys_updated_by>
        <sys_updated_on>2022-01-12 01:22:09</sys_updated_on>
        <type>Widget</type>
        <update_guid>c240897c78490dd49abe86436fbe5c66</update_guid>
        <update_guid_history>c240897c78490dd49abe86436fbe5c66:891909923,a00bfc3075490dd475555c2bc92ad9ec:720679722,b4eabc30bb490dd47c435bae28808fb0:1557817682</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="">3eb20df0db890dd491a5560868961923</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>Mohammad.Ahmed@mindshift.com</sys_created_by>
        <sys_created_on>2022-01-12 01:32:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>14bdf5c0204840e081bac08d1ef94fa1</sys_id>
        <sys_metadata>70ea7cbcdb090dd491a5560868961902</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>RSA Data Table from URL Definition</sys_name>
        <sys_package display_value="Ricoh Service Advantage Portal" source="x_mst_tsp">e34745bedb04cd50c05f2706ca96190c</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Ricoh Service Advantage Portal">e34745bedb04cd50c05f2706ca96190c</sys_scope>
        <sys_scope_delete display_value="">a1c19b8b317e4728ac3ec000d4ba5a40</sys_scope_delete>
        <sys_update_name>sp_widget_70ea7cbcdb090dd491a5560868961902</sys_update_name>
        <sys_update_version display_value="sp_widget_70ea7cbcdb090dd491a5560868961902">86404d7cdb490dd491a5560868961976</sys_update_version>
        <sys_updated_by>Mohammad.Ahmed@mindshift.com</sys_updated_by>
        <sys_updated_on>2022-01-12 01:32:51</sys_updated_on>
    </sys_metadata_delete>
</record_update>
